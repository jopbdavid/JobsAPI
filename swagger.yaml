openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: "1.0"
servers:
  - url: https://temp-jobs-api-w1nb.onrender.com/api/v1
    variables: {}
paths:
  /jobs:
    get:
      tags:
        - Jobs
      summary: GetAllJobs
      operationId: GetAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: IBM
                    position: Software Engineer
            example:
              company: IBM
              position: Software Engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    get:
      tags:
        - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters:
        - name: id
          in: path
          description: ID of pet to use
          required: true
          schema:
            type: array
            items:
              type: string
          style: simple
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
        - name: id
          in: path
          description: ID of pet to use
          required: true
          schema:
            type: array
            items:
              type: string
          style: simple
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobRequest"
                - example:
                    status: declined
                    company: IBM
                    position: full stack engineer
            example:
              status: declined
              company: IBM
              position: full stack engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []

    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
        - name: id
          in: path
          description: ID of pet to use
          required: true
          schema:
            type: array
            items:
              type: string
          style: simple
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterUserRequest"
                - example:
                    name: test
            example:
              name: test
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginUserRequest"
                - example:
                    email: maria@test.com
                    password: supersecret
            example:
              email: maria@test.com
              password: supersecret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
      type: object
      properties:
        name:
          type: string
      example:
        name: test
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: maria@test.com
        password: supersecret
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: IBM
        position: Software Engineer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - status
        - company
        - position
      type: object
      properties:
        status:
          type: string
        company:
          type: string
        position:
          type: string
      example:
        status: declined
        company: IBM
        position: full stack engineer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Jobs
    description: ""
  - name: Auth
    description: ""
